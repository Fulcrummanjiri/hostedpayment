<?xml version="1.0"?>
<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:ObjectManager/etc/config.xsd">
    <!-- Payment Method Facade configuration -->
    <virtualType name="HostedPaymentFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">\Apexx\HostedPayment\Model\Ui\ConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Apexx\HostedPayment\Block\Info</argument>
            <argument name="valueHandlerPool" xsi:type="object">HostedPaymentValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">HostedPaymentCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- Configuration reader -->
    <virtualType name="HostedPaymentConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode"
                      xsi:type="const">\Apexx\HostedPayment\Model\Ui\ConfigProvider::CODE
            </argument>
        </arguments>
    </virtualType>

    <!-- Commands infrastructure -->
    <virtualType name="HostedPaymentCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
		<item name="initialize" xsi:type="string">Apexx\HostedPayment\Gateway\Command\InitializeCommand</item>
                <item name="authorize" xsi:type="string">HostedPaymentAuthorizeCommand</item>
                <item name="capture" xsi:type="string">HostedPaymentCaptureCommand</item>
                <item name="cancel" xsi:type="string">HostedPaymentCancelCommand</item>
                <item name="void" xsi:type="string">HostedPaymentVoidCommand</item>
                <item name="refund" xsi:type="string">HostedPaymentRefundCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Authorize command -->
    <virtualType name="HostedPaymentAuthorizeCommand"
                 type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder"
                      xsi:type="object">HostedPaymentAuthorizationRequest</argument>
            <argument name="handler"
                      xsi:type="object">HostedPaymentResponseHandlerComposite</argument>
            <argument name="transferFactory"
                      xsi:type="object">Apexx\HostedPayment\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">Apexx\HostedPayment\Gateway\Http\Client\ClientMock</argument>
            <argument name="validator"
            xsi:type="object">Apexx\HostedPayment\Gateway\Validator\ResponseCodeValidator
        </argument>
        </arguments>
    </virtualType>

    <!-- Authorization Request -->
    <virtualType name="HostedPaymentAuthorizationRequest"
                 type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction"
                      xsi:type="string">Apexx\HostedPayment\Gateway\Request\AuthorizationRequest</item>
                <!--<item name="mockData" xsi:type="string">Apexx\HostedPayment\Gateway\Request\MockDataRequest</item>-->
            </argument>
        </arguments>
    </virtualType>
    <type name="Apexx\HostedPayment\Gateway\Request\AuthorizationRequest">
        <arguments>
            <argument name="config" xsi:type="object">HostedPaymentConfig</argument>
        </arguments>
    </type>

    <!-- Capture command -->
    <virtualType name="HostedPaymentCaptureCommand"
                 type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder"
                      xsi:type="object">HostedPaymentCaptureRequest</argument>
            <argument name="handler"
                      xsi:type="object">Apexx\HostedPayment\Gateway\Response\InvoiceCaptureHandler
            </argument>
            <argument name="transferFactory"
                      xsi:type="object">Apexx\HostedPayment\Gateway\Http\TransferFactory</argument>
            <argument name="validator"
                      xsi:type="object">Apexx\HostedPayment\Gateway\Validator\ResponseCaptureValidator
            </argument>
            <argument name="client" xsi:type="object">Apexx\HostedPayment\Gateway\Http\Client\CaptureSale
            </argument>
        </arguments>
    </virtualType>
    <!-- Capture Request -->
    <virtualType name="HostedPaymentCaptureRequest"
                 type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="capture"
                      xsi:type="string">Apexx\HostedPayment\Gateway\Request\CaptureDataBuilder
                </item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Cancel command -->
    <virtualType name="HostedPaymentCancelCommand"
                 type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder"
                      xsi:type="object">HostedPaymentCancelRequest</argument>
            <argument name="handler"
                      xsi:type="object">Apexx\HostedPayment\Gateway\Response\CancelHandler
            </argument>
            <argument name="transferFactory"
                      xsi:type="object">Apexx\HostedPayment\Gateway\Http\TransferFactory</argument>
            <argument name="validator"
                      xsi:type="object">Apexx\HostedPayment\Gateway\Validator\ResponseCancelValidator</argument>
            <argument name="client" xsi:type="object">Apexx\HostedPayment\Gateway\Http\Client\CancelSale
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="HostedPaymentCancelRequest"
                 type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="cancel"
                      xsi:type="string">Apexx\HostedPayment\Gateway\Request\CancelDataBuilder
                </item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Refund command -->
    <virtualType name="HostedPaymentRefundCommand"
                 type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder"
                      xsi:type="object">HostedPaymentRefundRequest</argument>
            <argument name="handler"
                      xsi:type="object">Apexx\HostedPayment\Gateway\Response\RefundHandler
            </argument>
            <argument name="transferFactory"
                      xsi:type="object">Apexx\HostedPayment\Gateway\Http\TransferFactory</argument>
            <argument name="validator"
                      xsi:type="object">Apexx\HostedPayment\Gateway\Validator\ResponseRefundValidator
            </argument>
            <argument name="client" xsi:type="object">Apexx\HostedPayment\Gateway\Http\Client\RefundSale
            </argument>
        </arguments>
    </virtualType>
    <!-- Refund Request -->
    <virtualType name="HostedPaymentRefundRequest"
                 type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="refund"
                      xsi:type="string">Apexx\HostedPayment\Gateway\Request\RefundDataBuilder
                </item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Void command -->
    <virtualType name="HostedPaymentVoidCommand"
                 type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder"
                      xsi:type="object">HostedPaymentVoidRequest</argument>
            <argument name="handler"
                      xsi:type="object">Apexx\HostedPayment\Gateway\Response\VoidHandler
            </argument>
            <argument name="transferFactory"
                      xsi:type="object">Apexx\HostedPayment\Gateway\Http\TransferFactory</argument>
            <argument name="validator"
                      xsi:type="object">Apexx\HostedPayment\Gateway\Validator\ResponseVoidValidator</argument>
            <argument name="client" xsi:type="object">Apexx\HostedPayment\Gateway\Http\Client\VoidSale
            </argument>
        </arguments>
    </virtualType>
    <!-- Void Request -->
    <virtualType name="HostedPaymentVoidRequest"
                 type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="void" xsi:type="string">Apexx\HostedPayment\Gateway\Request\VoidDataBuilder
                </item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Response handlers -->
    <virtualType name="HostedPaymentResponseHandlerComposite"
                 type="Magento\Payment\Gateway\Response\HandlerChain">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="txnid" xsi:type="string">Apexx\HostedPayment\Gateway\Response\TxnIdHandler</item>
                <item name="fraud" xsi:type="string">Apexx\HostedPayment\Gateway\Response\FraudHandler</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Value handlers infrastructure -->
    <virtualType name="HostedPaymentValueHandlerPool"
                 type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">HostedPaymentConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="HostedPaymentConfigValueHandler"
                 type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">HostedPaymentConfig</argument>
        </arguments>
    </virtualType>

    <type name="Apexx\HostedPayment\Block\Info">
        <arguments>
            <argument name="config" xsi:type="object">HostedPaymentConfig</argument>
        </arguments>
    </type>

    <preference for="Apexx\HostedPayment\Api\HostedIframeUrlInterface"
                type="Apexx\HostedPayment\Model\HostedIframeUrl"/>
    <type name="Magento\Payment\Model\Method\Adapter">
        <plugin name="apexx_hosted_payment_action"
                type="Apexx\HostedPayment\Plugin\Method\ApexxAdapter" sortOrder="20"/>
    </type>
    <!--<type name="Magento\Sales\Model\Order\Payment\State\CommandInterface">
        <plugin name="apexx_set_order_status" type="Apexx\HostedPayment\Plugin\Model\Order\Payment\State\CommandInterface" />
    </type>-->
</config>
